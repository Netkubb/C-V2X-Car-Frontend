# Use official Node.js LTS (Long Term Support) image as base
FROM node:20.6.1-alpine

# Set working directory inside the container
WORKDIR /usr/src/app

# Copy package.json and package-lock.json to the working directory
COPY package*.json ./

# Install dependencies
RUN npm install && npm cache clean --force

# Copy the rest of the application code
COPY . .

# Define build-time environment variables
ARG NEXT_PUBLIC_API_URL
ARG NEXT_PUBLIC_WEB_SOCKET_URL
ARG NEXT_PUBLIC_API_CAM_URI
ARG NEXT_PUBLIC_API_SERVER_URI
ARG NEXT_PUBLIC_OBU_SOCKET_WS_URL
ARG NEXT_PUBLIC_OBU_SOCKET_HTTP_URL
ARG NEXT_PUBLIC_THUMBNAIL_SERVER_URL
ARG NEXT_PUBLIC_DEDICATED_SERVER_URL
ARG NEXT_PUBLIC_CAR_ID
ARG NEXT_PUBLIC_CAM_FRONT
ARG NEXT_PUBLIC_CAM_BACK
ARG NEXT_PUBLIC_CAM_LEFT
ARG NEXT_PUBLIC_CAM_RIGHT
ARG NEXT_PUBLIC_CAM_START_WITH
ARG NEXT_PUBLIC_DRIVER_USERNAME
ARG NEXT_PUBLIC_DRIVER_PASSWORD

# Set environment variables for Next.js build
ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
ENV NEXT_PUBLIC_WEB_SOCKET_URL=${NEXT_PUBLIC_WEB_SOCKET_URL}
ENV NEXT_PUBLIC_API_CAM_URI=${NEXT_PUBLIC_API_CAM_URI}
ENV NEXT_PUBLIC_API_SERVER_URI=${NEXT_PUBLIC_API_SERVER_URI}
ENV NEXT_PUBLIC_OBU_SOCKET_WS_URL=${NEXT_PUBLIC_OBU_SOCKET_WS_URL}
ENV NEXT_PUBLIC_OBU_SOCKET_HTTP_URL=${NEXT_PUBLIC_OBU_SOCKET_HTTP_URL}
ENV NEXT_PUBLIC_THUMBNAIL_SERVER_URL = ${NEXT_PUBLIC_THUMBNAIL_SERVER_URL}
ENV NEXT_PUBLIC_DEDICATED_SERVER_URL = ${NEXT_PUBLIC_DEDICATED_SERVER_URL}
ENV NEXT_PUBLIC_CAR_ID=${NEXT_PUBLIC_CAR_ID}
ENV NEXT_PUBLIC_CAM_FRONT=${NEXT_PUBLIC_CAM_FRONT}
ENV NEXT_PUBLIC_CAM_BACK=${NEXT_PUBLIC_CAM_BACK}
ENV NEXT_PUBLIC_CAM_LEFT=${NEXT_PUBLIC_CAM_LEFT}
ENV NEXT_PUBLIC_CAM_RIGHT=${NEXT_PUBLIC_CAM_RIGHT}
ENV NEXT_PUBLIC_CAM_START_WITH=${NEXT_PUBLIC_CAM_START_WITH}
ENV NEXT_PUBLIC_DRIVER_USERNAME=${NEXT_PUBLIC_DRIVER_USERNAME}
ENV NEXT_PUBLIC_DRIVER_PASSWORD=${NEXT_PUBLIC_DRIVER_PASSWORD}

# Build the application
RUN npm run build

# Expose port 3000 (React)
EXPOSE 3000

# Command to run the application
CMD ["npm", "start"]
